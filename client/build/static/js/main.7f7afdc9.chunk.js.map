{"version":3,"sources":["components/modal/Modal.styled.js","redux/selectors/modalSelector.js","redux/actions/modalAction.js","components/modal/Modal.js","components/App.js","index.js"],"names":["ModalWindow","styled","div","getModalSelector","state","modal","toggleModal","createAction","openModal","closeModal","Modal","children","useSelector","dispatch","useDispatch","useEffect","window","addEventListener","handleKeyDown","removeEventListener","document","body","className","style","overflow","e","code","modalActions","onClick","target","dataset","name","data-name","App","ReactDOM","render","getElementById"],"mappings":"iLAQeA,E,MANKC,EAAOC,IAAV,2GCAFC,EAFU,SAAAC,GAAK,OAAIA,EAAMC,O,OCMzB,GAAEC,YAJGC,YAAa,oBAIHC,UAHZD,YAAa,kBAGUE,WAFtBF,YAAa,oB,OCyDjBG,EAvDD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACPH,EAAYI,YAAYT,GAExBU,EAAWC,cAEjBC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACHF,OAAOG,oBAAoB,UAAWD,MAE3C,IAEHH,qBAAU,WACNK,SAASC,KAAKC,UAAYd,EAAY,OAAS,QAC/CY,SAASC,KAAKE,MAAMC,SAAWhB,EAAY,SAAW,YACvD,CAACA,IAEJ,IAAMU,EAAgB,SAAAO,GACH,WAAXA,EAAEC,MACFb,EAASc,EAAarB,eAE1Bc,SAASC,KAAKE,MAAMC,SAAW,WAcnC,OACI,mCACKhB,GACG,cAAC,EAAD,CAAaoB,QAfL,SAAAH,GACc,YAA1BA,EAAEI,OAAOC,QAAQC,OAGrBlB,EAASc,EAAarB,eACtBc,SAASC,KAAKE,MAAMC,SAAW,YAUYQ,YAAU,UAA7C,SACI,sBAAKV,UAAU,QAAQU,YAAU,QAAjC,UACI,uCAMCrB,UC1CVsB,EARH,WACR,OACI,8BACI,cAAC,EAAD,OCAZC,IAASC,OAAO,cAAC,EAAD,IAASf,SAASgB,eAAe,W","file":"static/js/main.7f7afdc9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst ModalWindow = styled.div`\nposition: fixed;\nbackground-color: rgba(33, 33, 33, 0.12);\n  z-index: 1200;\n`\n\nexport default ModalWindow;","const getModalSelector = state => state.modal;\n\nexport default getModalSelector;","import { createAction } from '@reduxjs/toolkit';\n\nconst toggleModal = createAction('auth/toggleModal');\nconst openModal = createAction('auth/openModal');\nconst closeModal = createAction('auth/closeModal');\n\nexport default { toggleModal, openModal, closeModal };","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ModalWindow from './Modal.styled';\nimport getModalSelector from '../../redux/selectors/modalSelector';\nimport modalActions from '../../redux/actions/modalAction';\n\nconst Modal = ({ children }) => {\n    const openModal = useSelector(getModalSelector);\n    // const openModal = useSelector(getModalState);\n    const dispatch = useDispatch();\n    // const onlyWidth = useWindowWidth();\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n\n    useEffect(() => {\n        document.body.className = openModal ? 'open' : 'close';\n        document.body.style.overflow = openModal ? 'hidden' : 'visible';\n    }, [openModal]);\n\n    const handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            dispatch(modalActions.toggleModal());\n        }\n        document.body.style.overflow = 'visible';\n    };\n    const handleClick = e => {\n        if (e.target.dataset.name !== 'overlay') {\n            return;\n        }\n        dispatch(modalActions.toggleModal());\n        document.body.style.overflow = 'visible';\n    };\n    const closeModal = () => {\n        dispatch(modalActions.offModal());\n        document.body.style.overflow = 'visible';\n    };\n\n    return (\n        <>\n            {openModal && (\n                <ModalWindow onClick={handleClick} data-name=\"overlay\">\n                    <div className=\"modal\" data-name=\"modal\">\n                        <h1>Hello</h1>\n                        {/* <button\n                            className={onlyWidth < 768 ? 'arrowCloseButton' : 'closeButton'}\n                            type=\"button\"\n                            onClick={closeModal}\n                        ></button> */}\n                        {children}\n                    </div>\n                </ModalWindow>\n            )}\n        </>\n    );\n\n}\n\nexport default Modal;","import Modal from './modal/Modal';\n\nconst App = () => {\n    return (\n        <div>\n            <Modal></Modal>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}